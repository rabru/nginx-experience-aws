AWSTemplateFormatVersion : 2010-09-09
Description : Cloud9 IDE
Resources:

 LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
        Policies:
          -
            PolicyName: allowLambdaLogging
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "logs:*"
                  Resource: "*"

 RandomStringLambdaFunction:
   Type: AWS::Lambda::Function
   Properties:
      Code:
        ZipFile: >
          const response = require("cfn-response");

          const randomString = (length, chars) => {
              var result = '';
              for (var i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];
              return result;
          }

          exports.handler = (event, context) =>{

            const str = randomString(event['ResourceProperties']['Length'], '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
            const responseData = {RandomString: str};
            response.send(event, context, response.SUCCESS, responseData);

          };
      Handler: index.handler
      Runtime: nodejs12.x
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 20

 # Custom Resource
 RandomStringResource:
   Type: AWS::CloudFormation::CustomResource
   Properties:
     Length: 16
     ServiceToken: !GetAtt RandomStringLambdaFunction.Arn
     
 rC9Env:
   Type: AWS::Cloud9::EnvironmentEC2
   Properties:
     Name: !Sub ideNGINX-${RandomStringResource.RandomString}
     Repositories:
       - PathComponent: /labs
         RepositoryUrl: https://github.com/ArtiomL/aws-labs.git
     InstanceType: t3.small
     AutomaticStopTimeMinutes: 60
 rIAMRole:
   Type: AWS::IAM::Role
   Properties:
     RoleName: !Sub eksworkshop-admin-${RandomStringResource.RandomString}
     Path: /
     ManagedPolicyArns:
       - arn:aws:iam::aws:policy/AdministratorAccess
     AssumeRolePolicyDocument:
       Version: "2012-10-17"
       Statement:
       - Effect: Allow
         Principal:
           Service:
           - ec2.amazonaws.com
         Action:
         - sts:AssumeRole
 rIAMInProf:
   Type: AWS::IAM::InstanceProfile
   Properties:
     InstanceProfileName: !Sub eksworkshop-admin-${RandomStringResource.RandomString}
     Path: /
     Roles: 
       -
         Ref: rIAMRole

 # Outputs
Outputs:
 SampleStringOutput:
    Value: !GetAtt RandomStringResource.RandomString
    Description: "Sample random string generated by lambda function using Node.js"